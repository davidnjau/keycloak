server:
  port: 8100

#keycloak:
#  server-url: http://localhost:8999
#  realm: keycloak-spring-boot-realm
#  client-id: keycloak-spring-boot-client
#  client-secret: 7WQKx8RuVv6ta5laSKHMpVuUDuoye0kq
#  admin-username: keycloakadmin
#  admin-password: keycloakpassword
#  principle-attribute: preferred_username
#  default-role: ROLE_USER

spring:
  application:
    name: keycloak-spring-boot-app
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.server-url}/realms/${keycloak.realm}
  mvc:
    log-request-details: true

management:
  endpoints:
    web:
      exposure:
        include: "prometheus,health,metrics"
  metrics:
    tags:
      application: keycloak-spring-boot-app
  endpoint:
    prometheus:
      enabled: true


logging:
  level:
    org:
      springframework:
        security:
          web:
            FilterChainProxy: DEBUG      # Logs which SecurityFilterChain matches
          authorization: DEBUG           # Logs authorization decisions
          authentication: DEBUG          # Logs authentication details
        web:
          servlet:
            DispatcherServlet: DEBUG      # Logs request handling
            mvc:
              method:
                annotation: DEBUG         # Logs which @RequestMapping method is chosen
      keycloak: DEBUG


